spring.application.name=ClientFlow

# MVC Config
spring.mvc.hiddenmethod.filter.enabled=true

# Base configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/client_flow?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=12345
logging.level.org.hibernate.persister.entity=ERROR

# Notifications
notification-svc.failure-message.clear-history=Notification service is temporary down! Please try again later!
notification-svc.base-url=http://localhost:8081/api/v1/notifications

# Plan properties:
## Plan prices
plans.priceSimpleStart=9.99
plans.priceEssentials=19.99
plans.pricePlus=29.99
## Max users per plan type
plans.maxUsersSimpleStart=1
plans.maxUsersEssentials=5
plans.maxUsersPlus=15

# Kafka Broker running location
spring.kafka.bootstrap-servers=localhost:9092
#JSON Serializer (for sending)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#JSON Deserializer (for receiving)
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=client-flow